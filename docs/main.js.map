{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/abstract-event-renderer/abstract-event-renderer.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/education-event/education-event.component.ts","./src/app/education-event/education-event.component.html","./src/app/event-list-item/event-list-item.component.ts","./src/app/event-list-item/event-list-item.component.html","./src/app/event-list/event-list.component.ts","./src/app/event-list/event-list.component.html","./src/app/event-tags/event-tags.component.ts","./src/app/event-tags/event-tags.component.html","./src/app/event-title/event-title.component.ts","./src/app/event-title/event-title.component.html","./src/app/event/event.directive.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/job-change-event/job-change-event.component.ts","./src/app/job-change-event/job-change-event.component.html","./src/app/json-event/json-event.component.ts","./src/app/json-event/json-event.component.html","./src/app/lunr/configuration.ts","./src/app/lunr/document-store.ts","./src/app/lunr/filters/stemmer.ts","./src/app/lunr/filters/stopword.ts","./src/app/lunr/filters/trimmer.ts","./src/app/lunr/index-pipeline.ts","./src/app/lunr/index.ts","./src/app/lunr/inverted-index.ts","./src/app/lunr/tokenizer.ts","./src/app/pipe/contact-icon-name.pipe.ts","./src/app/pipe/contact-link.pipe.ts","./src/app/presentation-event/presentation-event.component.ts","./src/app/presentation-event/presentation-event.component.html","./src/app/project-event/project-event.component.ts","./src/app/project-event/project-event.component.html","./src/app/services/data.service.ts","./src/app/services/tag-search.service.ts","./src/app/skill-box/skill-box.component.ts","./src/app/skill-box/skill-box.component.html","./src/app/tag-search/tag-search.component.ts","./src/app/tag-search/tag-search.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { HostBinding, Input, Directive } from '@angular/core';\nimport { CareerEvent } from '../model/career-event';\nimport { EventRenderer } from '../model/event-renderer';\n\n@Directive()\nexport abstract class AbstractEventRendererComponent implements EventRenderer {\n\n  /**\n   * The date, or end date.\n   */\n  public date: Date;\n\n  /**\n   * The start date.\n   */\n  public beginDate: Date;\n\n  /**\n   * The end date.\n   */\n  public endDate: Date;\n\n  /**\n   * Class binding for the type.\n   */\n  @HostBinding('class')\n  public class: string;\n\n  /**\n   * Private event instance.\n   */\n  private _event: CareerEvent;\n\n  /**\n   * Get the event.\n   */\n  public get event(): CareerEvent {\n    return this._event;\n  }\n\n  /**\n   * Career Event\n   */\n  @Input()\n  public set event(value: CareerEvent) {\n    this._event = value;\n\n    this.beginDate = this.buildDate(value.date, 'begin');\n    this.endDate = this.buildDate(value.date, 'end');\n    this.date = this.buildDate(value.date, 'end');\n\n    this.class = value.type;\n  }\n\n  /**\n   * The build date.\n   */\n  private buildDate(date: string | { begin: string, end: string }, key: 'begin' | 'end'): Date {\n    let dateString: string;\n    if (typeof date === 'string') {\n      dateString = date;\n    } else {\n      dateString = date[key];\n    }\n    if (dateString === 'current') {\n      return new Date();\n    }\n    return new Date(dateString);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cv-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  /**\n   * Constructor.\n   */\n  constructor() {\n  }\n}\n","<cv-header></cv-header>\n<router-outlet></router-outlet>\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { AppComponent } from './app.component';\nimport { EducationEventComponent } from './education-event/education-event.component';\nimport { EventListItemComponent } from './event-list-item/event-list-item.component';\nimport { EventListComponent } from './event-list/event-list.component';\nimport { EventTitleComponent } from './event-title/event-title.component';\nimport { EventDirective } from './event/event.directive';\nimport { HeaderComponent } from './header/header.component';\nimport { JobChangeEventComponent } from './job-change-event/job-change-event.component';\nimport { JsonEventComponent } from './json-event/json-event.component';\nimport { ContactIconNamePipe } from './pipe/contact-icon-name.pipe';\nimport { ContactLinkPipe } from './pipe/contact-link.pipe';\nimport { PresentationEventComponent } from './presentation-event/presentation-event.component';\nimport { ProjectEventComponent } from './project-event/project-event.component';\nimport { TagSearchComponent } from './tag-search/tag-search.component';\nimport { EventTagsComponent } from './event-tags/event-tags.component';\nimport { SkillBoxComponent } from './skill-box/skill-box.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    TagSearchComponent,\n    ContactLinkPipe,\n    ContactIconNamePipe,\n    EventListComponent,\n    EventDirective,\n    EventListItemComponent,\n    JsonEventComponent,\n    ProjectEventComponent,\n    JobChangeEventComponent,\n    PresentationEventComponent,\n    EducationEventComponent,\n    EventTitleComponent,\n    EventTagsComponent,\n    SkillBoxComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    RouterModule.forRoot([{\n      path: '',\n      component: EventListComponent\n    }], {relativeLinkResolution: 'legacy'}),\n    FontAwesomeModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {enabled: environment.production})\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n}\n","import { Component } from '@angular/core';\nimport { AbstractEventRendererComponent } from '../abstract-event-renderer/abstract-event-renderer.component';\n\n@Component({\n  selector: 'cv-education-event',\n  templateUrl: './education-event.component.html',\n  styleUrls: ['./education-event.component.scss']\n})\nexport class EducationEventComponent extends AbstractEventRendererComponent {\n\n}\n","<cv-event-title [title]=\"event.title\" [date]=\"endDate\"></cv-event-title>\n<small>{{event.institution}}</small>\n","import {\n  Component,\n  ComponentFactoryResolver,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Type,\n  ViewChild\n} from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { EducationEventComponent } from '../education-event/education-event.component';\nimport { EventDirective } from '../event/event.directive';\nimport { JobChangeEventComponent } from '../job-change-event/job-change-event.component';\nimport { JsonEventComponent } from '../json-event/json-event.component';\nimport { CareerEvent } from '../model/career-event';\nimport { EventRenderer } from '../model/event-renderer';\nimport { PresentationEventComponent } from '../presentation-event/presentation-event.component';\nimport { ProjectEventComponent } from '../project-event/project-event.component';\n\n@Component({\n  selector: 'cv-event-list-item',\n  templateUrl: './event-list-item.component.html',\n  styleUrls: ['./event-list-item.component.scss']\n})\n\nexport class EventListItemComponent implements OnInit, OnDestroy {\n\n  /**\n   * Class binding for the type.\n   */\n  @HostBinding('class')\n  public class: string;\n\n  /**\n   * The event directive.\n   */\n  @ViewChild(EventDirective, { static: true })\n  public eventHost: EventDirective;\n\n  /**\n   * The data source.\n   */\n  private data$: BehaviorSubject<CareerEvent> = new BehaviorSubject<CareerEvent>(null);\n\n  /**\n   * Renderer subscription.\n   */\n  private subscription: Subscription;\n\n  /**\n   * The constructor.\n   */\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n\n  /**\n   * The inbound career event.\n   */\n  @Input()\n  public set event(evt: CareerEvent) {\n    this.data$.next(evt);\n  }\n\n  /**\n   * On init.\n   */\n  public ngOnInit() {\n    this.subscription = this.data$\n      .subscribe((event) => this.loadComponent(event));\n  }\n\n  /**\n   * Shut down.\n   */\n  public ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n  }\n\n  /**\n   * Load the component.\n   */\n  public loadComponent(event: CareerEvent) {\n    this.class = event.type;\n\n    const componentType = this.getComponentType(event.type);\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n\n    const viewContainerRef = this.eventHost.viewContainerRef;\n    viewContainerRef.clear();\n\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n    (<EventRenderer>componentRef.instance).event = event;\n  }\n\n  /**\n   * Get the component renderer for this event.\n   */\n  private getComponentType(type: string): Type<{}> {\n    switch (type) {\n      case 'project':\n        return ProjectEventComponent;\n      case 'presentation':\n        return PresentationEventComponent;\n      case 'job_change':\n        return JobChangeEventComponent;\n      case 'education':\n        return EducationEventComponent;\n      default:\n        return JsonEventComponent;\n    }\n  }\n}\n","<ng-template cvEventHost></ng-template>\n","import { Component, HostBinding } from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, shareReplay, tap, withLatestFrom } from 'rxjs/operators';\nimport { CareerEvent } from '../model/career-event';\nimport { DataService } from '../services/data.service';\nimport { TagSearchService } from '../services/tag-search.service';\n\n/**\n * The event list.\n */\n@Component({\n  selector: 'cv-event-list',\n  templateUrl: './event-list.component.html',\n  styleUrls: ['./event-list.component.scss']\n})\nexport class EventListComponent {\n\n  /**\n   * The project & job timeline.\n   */\n  public events$: Observable<CareerEvent[]>;\n\n  /**\n   * Education Events\n   */\n  public education$: Observable<CareerEvent[]>;\n\n  /**\n   * Presentation Events\n   */\n  public presentations$: Observable<CareerEvent[]>;\n\n  @HostBinding('class')\n  public state: string;\n\n  /**\n   * Constructor.\n   */\n  public about$: Observable<string>;\n\n  constructor(public dataService: DataService,\n              public tagService: TagSearchService) {\n\n    const profileText$ = dataService.profile$\n      .pipe(\n        map((profile) => profile.about),\n        map((about) => about[0].text)\n      );\n\n    this.about$ = combineLatest([profileText$, tagService.selectedTags$])\n      .pipe(\n        map(([about, tags]) => tags.length > 0 ? about : '')\n      );\n\n    tagService.selectedTags$\n      .pipe(\n        map((value) => value.length > 0)\n      ).subscribe((hasTags) => this.state = hasTags ? 'expand' : 'collapse');\n\n    const all$ = combineLatest([dataService.events$, tagService.selectedTags$])\n      .pipe(\n        map(([events, tags]) => {\n          if (tags.length === 0) {\n            return [];\n          }\n          if (tags.indexOf('Everything') > -1) {\n            return events;\n          }\n\n          return events.filter((event) => {\n            return tags.filter((tag) => event.tags.indexOf(tag) > -1).length > 0;\n          });\n        }),\n        shareReplay(1)\n      );\n\n    this.events$ = all$\n      .pipe(\n        map((events) => events.filter((event) => ['presentation', 'education'].indexOf(event.type) === -1))\n      );\n\n    this.education$ = all$\n      .pipe(\n        map((events: CareerEvent[]) => events.filter((event) => event.type === 'education'))\n      );\n\n    this.presentations$ = all$\n      .pipe(\n        map((events: CareerEvent[]) => events.filter((event) => event.type === 'presentation'))\n      );\n\n  }\n\n}\n","<div class=\"container\">\n  <ng-container *ngIf=\"about$ | async as about\">\n    <h3>About</h3>\n    <p class=\"about\">{{about}}</p>\n    <h3>Skills</h3>\n    <cv-skill-box></cv-skill-box>\n  </ng-container>\n  <ng-container *ngIf=\"events$ | async as events\">\n    <h3 *ngIf=\"events.length > 0\">Timeline</h3>\n    <cv-event-list-item *ngFor=\"let event of events\"\n                        [event]=\"event\"></cv-event-list-item>\n  </ng-container>\n  <ng-container *ngIf=\"presentations$ | async as events\">\n    <h3 *ngIf=\"events.length > 0\">Presentations</h3>\n    <cv-event-list-item *ngFor=\"let event of events\"\n                        [event]=\"event\"></cv-event-list-item>\n  </ng-container>\n  <ng-container *ngIf=\"education$ | async as events\">\n    <h3 *ngIf=\"events.length > 0\">Education</h3>\n    <cv-event-list-item *ngFor=\"let event of events\"\n                        [event]=\"event\"></cv-event-list-item>\n  </ng-container>\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cv-event-tags',\n  templateUrl: './event-tags.component.html',\n  styleUrls: ['./event-tags.component.scss']\n})\nexport class EventTagsComponent {\n\n  @Input()\n  public tags: string[];\n\n\n}\n","<span *ngFor=\"let tag of tags\">{{tag}}</span>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cv-event-title',\n  templateUrl: './event-title.component.html',\n  styleUrls: ['./event-title.component.scss']\n})\nexport class EventTitleComponent {\n\n  @Input()\n  public title: string;\n\n  @Input()\n  public date: Date;\n\n}\n","<h4>{{title}}</h4>\n<small class=\"date\">{{date | date: 'MMMM d, yyyy'}}</small>\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[cvEventHost]'\n})\nexport class EventDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {\n  }\n}\n","import { Component, HostBinding } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Profile } from '../model/profile';\nimport { ProfileContact } from '../model/profile-contact';\nimport { DataService } from '../services/data.service';\nimport { TagSearchService } from '../services/tag-search.service';\n\n/**\n * Shared header.\n */\n@Component({\n  selector: 'cv-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n\n  /**\n   * The profile service.\n   */\n  public profile$: Observable<Profile>;\n\n  /**\n   * The contacts\n   */\n  public contacts$: Observable<ProfileContact[]>;\n\n  /**\n   * Did we select any tags?\n   */\n  public hasNoTags$: Observable<boolean>;\n\n  /**\n   * Class list.\n   */\n  @HostBinding('class')\n  public state: string;\n\n  /**\n   * Constructor.\n   */\n  constructor(private data: DataService,\n              private tags: TagSearchService) {\n    tags.selectedTags$\n      .pipe(\n        map((t) => t.length > 0 ? 'collapse' : 'expand')\n      ).subscribe((value) => this.state = value);\n\n    this.hasNoTags$ = tags.selectedTags$.pipe(\n      map(value => !value.length)\n    );\n\n    this.profile$ = data.profile$;\n    this.contacts$ = data.profile$\n      .pipe(\n        map((profile) => profile && profile.contact || [])\n      );\n  }\n\n  /**\n   * Choose all items in the CV.\n   */\n  public everything(): void {\n    this.tags.clear();\n    this.tags.addTag('Everything');\n  }\n}\n","<div *ngIf=\"profile$ | async as profile\" class=\"profile\">\n\n  <h1>{{profile.name}}</h1>\n\n  <cv-tag-search class=\"no-print\" placeholder=\"This is my Resumé. What are you looking for?\">\n  </cv-tag-search>\n  <button (click)=\"everything()\" *ngIf=\"hasNoTags$ | async\">\n    Show me everything\n  </button>\n</div>\n\n<div class=\"contact-icons\">\n  <a *ngFor=\"let contact of contacts$ | async\"\n     target=\"_blank\"\n     classList=\"icon {{contact.type}}\"\n     [href]=\"contact | contactLink\">\n    <span class=\"label\">{{contact.value}}</span>\n    <span class=\"icon\"><fa-icon [icon]=\"contact | contactIconName\"></fa-icon></span>\n  </a>\n</div>\n","import { Component } from '@angular/core';\nimport { AbstractEventRendererComponent } from '../abstract-event-renderer/abstract-event-renderer.component';\n\n@Component({\n  selector: 'cv-job-change-event',\n  templateUrl: './job-change-event.component.html',\n  styleUrls: ['./job-change-event.component.scss']\n})\nexport class JobChangeEventComponent extends AbstractEventRendererComponent {\n\n}\n","<small class=\"title\">\n  {{event.title}} <span class=\"title\">//</span> {{event.employer}}\n</small>\n<small class=\"minor\">\n  {{beginDate | date: 'MMMM, yyyy'}} - {{endDate | date: 'MMMM, yyyy'}}\n</small>\n","import { Component } from '@angular/core';\nimport { CareerEvent } from '../model/career-event';\nimport { EventRenderer } from '../model/event-renderer';\n\n@Component({\n  selector: 'cv-json-event',\n  templateUrl: './json-event.component.html',\n  styleUrls: ['./json-event.component.scss']\n})\nexport class JsonEventComponent implements EventRenderer {\n\n  public event: CareerEvent;\n\n}\n","{{event.type}}\n","/*\n * Copyright (c) 2022 dataplay.io, all rights reserved.\n */\n\n/**\n * Configuration properties for individual fields.\n */\nexport interface FieldConfiguration<T> {\n\n  boost?: number;\n\n  bool?: 'AND' | 'OR';\n\n  expand?: boolean;\n\n  fields?: { [K in keyof T]?: FieldConfiguration<T> };\n}\n\n/**\n * Configuration is used to analyze the user search configuration.\n *\n * By Configuration user could set query-time boosting, boolean model in each field.\n *\n * Currently configuration supports:\n * 1. query-time boosting, user could set how to boost each field.\n * 2. boolean model chosing, user could choose which boolean model to use for each field.\n * 3. token expansion, user could set token expand to True to improve Recall. Default is False.\n *\n * Query time boosting must be configured by field category, \"boolean\" model could be configured\n * by both field category or globally as the following example. Field configuration for \"boolean\"\n * will overwrite global configuration.\n * Token expand could be configured both by field category or golbally. Local field configuration will\n * overwrite global configuration.\n *\n * configuration example:\n * {\n *   fields:{\n *     title: {boost: 2},\n *     body: {boost: 1}\n *   },\n *   bool: \"OR\"\n * }\n *\n * \"bool\" field configuration overwrite global configuration example:\n * {\n *   fields:{\n *     title: {boost: 2, bool: \"AND\"},\n *     body: {boost: 1}\n *   },\n *   bool: \"OR\"\n * }\n *\n * \"expand\" example:\n * {\n *   fields:{\n *     title: {boost: 2, bool: \"AND\"},\n *     body: {boost: 1}\n *   },\n *   bool: \"OR\",\n *   expand: true\n * }\n *\n * \"expand\" example for field category:\n * {\n *   fields:{\n *     title: {boost: 2, bool: \"AND\", expand: true},\n *     body: {boost: 1}\n *   },\n *   bool: \"OR\"\n * }\n *\n * setting the boost to 0 ignores the field (this will only search the title):\n * {\n *   fields:{\n *     title: {boost: 1},\n *     body: {boost: 0}\n *   }\n * }\n *\n * then, user could search with configuration to do query-time boosting.\n * idx.search('oracle database', {fields: {title: {boost: 2}, body: {boost: 1}}});\n */\nexport class Configuration<T> {\n\n  /**\n   * Internal index configuration.\n   */\n  private readonly config: FieldConfiguration<T> = {};\n\n  /**\n   * Constructor, create a new instance using either a list of fields to index, or an explicit field configuration.\n   */\n  constructor(fields: (keyof T)[], config?: FieldConfiguration<T>) {\n    if (!fields || fields.length === 0) {\n      throw new Error('fields should not be empty');\n    }\n\n    if (!config) {\n      this.buildDefaultConfig(fields);\n    } else {\n      this.buildUserConfig(fields, config);\n    }\n  }\n\n  /**\n   * get current user configuration\n   */\n  public get() {\n    return this.config;\n  };\n\n  /**\n   * Build default search configuration.\n   */\n  private buildDefaultConfig(fields: (keyof T)[]) {\n    for (let field of fields) {\n\n      if (!this.config.fields) {\n        this.config.fields = {};\n      }\n\n      this.config.fields[field] = {\n        boost: 1,\n        bool: 'OR',\n        expand: false\n      };\n    }\n  };\n\n  /**\n   * Build a normalized configuration from the provided fields and config elements.\n   */\n  private buildUserConfig(fields: (keyof T)[], config: FieldConfiguration<T>) {\n    let global_bool = config?.bool || 'OR';\n    let global_expand = config?.expand || false;\n\n    if (config?.fields) {\n      for (let field in config?.fields) {\n        const field_config = config.fields[field];\n        let field_expand = global_expand;\n        if (field_config.expand !== undefined) {\n          field_expand = field_config.expand;\n        }\n\n        if (!this.config.fields) {\n          this.config.fields = {};\n        }\n\n        this.config.fields[field] = {\n          boost: (field_config.boost || field_config.boost === 0) ? field_config.boost : 1,\n          bool: field_config.bool || global_bool,\n          expand: field_expand\n        };\n      }\n    } else {\n      this.addAllFields2UserConfig(global_bool, global_expand, fields);\n    }\n  }\n\n  /**\n   * Add all fields to user search configuration.\n   */\n  private addAllFields2UserConfig(bool: 'AND' | 'OR', expand: boolean, fields: (keyof T)[]) {\n    if (!this.config.fields) {\n      this.config.fields = {};\n    }\n\n    for (let field of fields) {\n      this.config.fields[field] = {\n        boost: 1,\n        bool: bool,\n        expand: expand\n      };\n    }\n  }\n}\n","/*\n * Copyright (c) 2022 dataplay.io, all rights reserved.\n */\n\n/**\n * The type of a document's unique identifier. These are usually either strings or numbers; usually the former.\n */\nexport type DocRef<T> = T[keyof T];\n\n/**\n * DocumentStore is a simple key-value document store used for storing sets of tokens for\n * documents stored in index. It stores both the original document and the field\n * length for each encountered value.\n */\nexport class DocumentStore<T> {\n\n  /**\n   * Stored documents that have been indexed.\n   */\n  private readonly docs: Map<DocRef<T>, T | undefined> = new Map<DocRef<T>, T | undefined>();\n\n  /**\n   * A stored map of docs->fields->fieldLength\n   */\n  private readonly docInfo: Map<DocRef<T>, Map<keyof T, number>> = new Map<DocRef<T>, Map<keyof T, number>>();\n\n  /**\n   * The ID by which this document is identified.\n   */\n  private readonly _idField: keyof T;\n\n  /**\n   * In memory store of the documents used in the search.\n   */\n  constructor(idField: keyof T) {\n    this._idField = idField;\n  }\n\n  /**\n   * The current size of the document store.\n   */\n  public get length(): number {\n    return this.docInfo.size;\n  }\n\n  /**\n   * The ID by which the document is identified.\n   */\n  public get idField(): keyof T {\n    return this._idField;\n  }\n\n  /**\n   * Stores the given doc in the document store against the given id.\n   * If docRef already exist, then update doc.\n   *\n   * Document is store by original JSON format, then you could use original document to generate search snippets.\n   */\n  public addDoc(doc: T): void {\n    const docRef: DocRef<T> = doc[this.idField];\n    this.docs.set(docRef, this.clone(doc));\n    this.docInfo.set(docRef, new Map<keyof T, number>());\n  }\n\n  /**\n   * Reset the document store and clear out all values.\n   */\n  public clear(): void {\n    this.docInfo.clear();\n    this.docs.clear();\n  }\n\n  /**\n   * Retrieves the JSON doc from the document store for a given key.\n   *\n   * If docRef not found, return null.\n   * If user set not storing the documents, return null.\n   */\n  public getDoc(ref: DocRef<T>): T | undefined {\n    return this.docs.get(ref);\n  }\n\n  /**\n   * Checks whether the document store contains a key (docRef).\n   */\n  public hasDoc(ref: DocRef<T>): boolean {\n    return this.docs.has(ref);\n  }\n\n  /**\n   * Removes the value for a key in the document store.\n   */\n  public removeDoc(ref: DocRef<T>): void {\n    this.docs.delete(ref);\n    this.docInfo.delete(ref);\n  }\n\n  /**\n   * Add field length of a document's field tokens from pipeline results.\n   * The field length of a document is used to do field length normalization\n   * even without the original JSON document stored.\n   */\n  public setFieldLength(ref: DocRef<T>, fieldName: keyof T, length: number): void {\n    if (!ref || !this.hasDoc(ref)) {\n      return;\n    }\n    if (!this.docInfo.has(ref)) {\n      this.docInfo.set(ref, new Map<keyof T, number>());\n    }\n    this.docInfo.get(ref).set(fieldName, length);\n  }\n\n  /**\n   * get field length of a document by docRef\n   */\n  public getFieldLength(docRef: DocRef<T>, fieldName: keyof T): number {\n    return this.docInfo?.get(docRef)?.get(fieldName) || 0;\n  }\n\n  /**\n   * Cloning object\n   */\n  private clone<T>(obj: T): T {\n    if (null === obj || 'object' !== typeof obj) {\n      return obj;\n    }\n\n    let copy = obj.constructor();\n\n    for (let attr in obj) {\n      if (obj.hasOwnProperty(attr)) {\n        copy[attr] = obj[attr];\n      }\n    }\n\n    return copy;\n  }\n\n}\n","/*\n * Copyright (c) 2022 dataplay.io, all rights reserved.\n */\n\nconst step2list: { [key: string]: string } = {\n  'ational': 'ate',\n  'tional': 'tion',\n  'enci': 'ence',\n  'anci': 'ance',\n  'izer': 'ize',\n  'bli': 'ble',\n  'alli': 'al',\n  'entli': 'ent',\n  'eli': 'e',\n  'ousli': 'ous',\n  'ization': 'ize',\n  'ation': 'ate',\n  'ator': 'ate',\n  'alism': 'al',\n  'iveness': 'ive',\n  'fulness': 'ful',\n  'ousness': 'ous',\n  'aliti': 'al',\n  'iviti': 'ive',\n  'biliti': 'ble',\n  'logi': 'log'\n};\n\nconst step3list: { [key: string]: string } = {\n  'icate': 'ic',\n  'ative': '',\n  'alize': 'al',\n  'iciti': 'ic',\n  'ical': 'ic',\n  'ful': '',\n  'ness': ''\n};\n\nconst c = '[^aeiou]';          // consonant\nconst v = '[aeiouy]';          // vowel\nconst C = c + '[^aeiouy]*';    // consonant sequence\nconst V = v + '[aeiou]*';      // vowel sequence\n\nconst mgr0 = '^(' + C + ')?' + V + C;               // [C]VC... is m>0\nconst meq1 = '^(' + C + ')?' + V + C + '(' + V + ')?$';  // [C]VC[V] is m=1\nconst mgr1 = '^(' + C + ')?' + V + C + V + C;       // [C]VCVC... is m>1\nconst s_v = '^(' + C + ')?' + v;                   // vowel in stem\n\nconst re_mgr0 = new RegExp(mgr0);\nconst re_mgr1 = new RegExp(mgr1);\nconst re_meq1 = new RegExp(meq1);\nconst re_s_v = new RegExp(s_v);\n\nconst re_1a = /^(.+?)(ss|i)es$/;\nconst re2_1a = /^(.+?)([^s])s$/;\nconst re_1b = /^(.+?)eed$/;\nconst re2_1b = /^(.+?)(ed|ing)$/;\nconst re_1b_2 = /.$/;\nconst re2_1b_2 = /(at|bl|iz)$/;\nconst re3_1b_2 = new RegExp('([^aeiouylsz])\\\\1$');\nconst re4_1b_2 = new RegExp('^' + C + v + '[^aeiouwxy]$');\n\nconst re_1c = /^(.+?[^aeiou])y$/;\nconst re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n\nconst re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n\nconst re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\nconst re2_4 = /^(.+?)(s|t)(ion)$/;\n\nconst re_5 = /^(.+?)e$/;\nconst re_5_1 = /ll$/;\nconst re3_5 = new RegExp('^' + C + v + '[^aeiouwxy]$');\n\n\n/**\n * stemmer is an english language stemmer, this is a JavaScript\n * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n */\nexport function stemmer(w: string): string | undefined {\n  if (!w) {\n    return undefined;\n  }\n  let stem, suffix, firstch, re, re2, re3, re4;\n  if (w.length < 3) {\n    return w;\n  }\n\n  firstch = w.substr(0, 1);\n  if (firstch == 'y') {\n    w = firstch.toUpperCase() + w.substr(1);\n  }\n\n  // Step 1a\n  re = re_1a;\n  re2 = re2_1a;\n\n  if (re.test(w)) {\n    w = w.replace(re, '$1$2');\n  } else if (re2.test(w)) {\n    w = w.replace(re2, '$1$2');\n  }\n\n  // Step 1b\n  re = re_1b;\n  re2 = re2_1b;\n  if (re.test(w)) {\n    let fp = re.exec(w);\n    re = re_mgr0;\n    if (re.test(fp[1])) {\n      re = re_1b_2;\n      w = w.replace(re, '');\n    }\n  } else if (re2.test(w)) {\n    let fp = re2.exec(w);\n    stem = fp[1];\n    re2 = re_s_v;\n    if (re2.test(stem)) {\n      w = stem;\n      re2 = re2_1b_2;\n      re3 = re3_1b_2;\n      re4 = re4_1b_2;\n      if (re2.test(w)) {\n        w = w + 'e';\n      } else if (re3.test(w)) {\n        re = re_1b_2;\n        w = w.replace(re, '');\n      } else if (re4.test(w)) {\n        w = w + 'e';\n      }\n    }\n  }\n\n  // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n  re = re_1c;\n  if (re.test(w)) {\n    let fp = re.exec(w);\n    stem = fp[1];\n    w = stem + 'i';\n  }\n\n  // Step 2\n  re = re_2;\n  if (re.test(w)) {\n    let fp = re.exec(w);\n    stem = fp[1];\n    suffix = fp[2];\n    re = re_mgr0;\n    if (re.test(stem)) {\n      w = stem + step2list[suffix];\n    }\n  }\n\n  // Step 3\n  re = re_3;\n  if (re.test(w)) {\n    let fp = re.exec(w);\n    stem = fp[1];\n    suffix = fp[2];\n    re = re_mgr0;\n    if (re.test(stem)) {\n      w = stem + step3list[suffix];\n    }\n  }\n\n  // Step 4\n  re = re_4;\n  re2 = re2_4;\n  if (re.test(w)) {\n    let fp = re.exec(w);\n    stem = fp[1];\n    re = re_mgr1;\n    if (re.test(stem)) {\n      w = stem;\n    }\n  } else if (re2.test(w)) {\n    let fp = re2.exec(w);\n    stem = fp[1] + fp[2];\n    re2 = re_mgr1;\n    if (re2.test(stem)) {\n      w = stem;\n    }\n  }\n\n  // Step 5\n  re = re_5;\n  if (re.test(w)) {\n    let fp = re.exec(w);\n    stem = fp[1];\n    re = re_mgr1;\n    re2 = re_meq1;\n    re3 = re3_5;\n    if (re.test(stem) || (re2.test(stem) && !(re3.test(stem)))) {\n      w = stem;\n    }\n  }\n\n  re = re_5_1;\n  re2 = re_mgr1;\n  if (re.test(w) && re2.test(w)) {\n    re = re_1b_2;\n    w = w.replace(re, '');\n  }\n\n  // and turn initial Y back to y\n\n  if (firstch == 'y') {\n    w = firstch.toLowerCase() + w.substr(1);\n  }\n\n  return w;\n}\n","/*\n * Copyright (c) 2022 dataplay.io, all rights reserved.\n */\n\nimport { IndexPipelineFunction } from '../index-pipeline';\n\n/**\n * defaultStopWordFilter is an English language stop words filter, any words\n * contained in the stop word list will not be passed through the filter.\n *\n * This is intended to be used in the Pipeline. If the token does not pass the\n * filter then undefined will be returned.\n * Currently this StopwordFilter using dictionary to do O(1) time complexity stop word filtering.\n */\nexport function defaultStopWordFilter(): IndexPipelineFunction {\n  return stopWordFilter(...DefaultStopWords);\n}\n\n/**\n * Construct a stopword filter provided a list of stopwords. You may generate your own,\n * or use the provided DefaultStopWords to seed your own filter lambda.\n */\nexport function stopWordFilter(...stopWords: string[]): IndexPipelineFunction {\n  const stopWordMap: Set<string> = new Set<string>(stopWords);\n  return (w) => !w || stopWordMap.has(w) ? undefined : w;\n}\n\n/**\n * The default list of stop words.\n */\nexport const DefaultStopWords: string[] = [\n  '',\n  'a',\n  'able',\n  'about',\n  'across',\n  'after',\n  'all',\n  'almost',\n  'also',\n  'am',\n  'among',\n  'an',\n  'and',\n  'any',\n  'are',\n  'as',\n  'at',\n  'be',\n  'because',\n  'been',\n  'but',\n  'by',\n  'can',\n  'cannot',\n  'could',\n  'dear',\n  'did',\n  'do',\n  'does',\n  'either',\n  'else',\n  'ever',\n  'every',\n  'for',\n  'from',\n  'get',\n  'got',\n  'had',\n  'has',\n  'have',\n  'he',\n  'her',\n  'hers',\n  'him',\n  'his',\n  'how',\n  'however',\n  'i',\n  'if',\n  'in',\n  'into',\n  'is',\n  'it',\n  'its',\n  'just',\n  'least',\n  'let',\n  'like',\n  'likely',\n  'may',\n  'me',\n  'might',\n  'most',\n  'must',\n  'my',\n  'neither',\n  'no',\n  'nor',\n  'not',\n  'of',\n  'off',\n  'often',\n  'on',\n  'only',\n  'or',\n  'other',\n  'our',\n  'own',\n  'rather',\n  'said',\n  'say',\n  'says',\n  'she',\n  'should',\n  'since',\n  'so',\n  'some',\n  'than',\n  'that',\n  'the',\n  'their',\n  'them',\n  'then',\n  'there',\n  'these',\n  'they',\n  'this',\n  'tis',\n  'to',\n  'too',\n  'twas',\n  'us',\n  'wants',\n  'was',\n  'we',\n  'were',\n  'what',\n  'when',\n  'where',\n  'which',\n  'while',\n  'who',\n  'whom',\n  'why',\n  'will',\n  'with',\n  'would',\n  'yet',\n  'you',\n  'your'\n];\n","/*\n * Copyright (c) 2022 dataplay.io, all rights reserved.\n */\n\n/**\n * trimmer is a pipeline function for trimming non word\n * characters from the begining and end of tokens before they\n * enter the index.\n *\n * This implementation may not work correctly for non latin\n * characters and should either be removed or adapted for use\n * with languages with non-latin characters.\n */\nexport function trimmer(token: string): string | undefined {\n  if (!token) {\n    return undefined;\n  }\n\n  return token\n    .replace(/^\\W+/, '')\n    .replace(/\\W+$/, '');\n}\n","/*\n * Copyright (c) 2022 dataplay.io, all rights reserved.\n */\n\nimport { stemmer } from './filters/stemmer';\nimport { defaultStopWordFilter } from './filters/stopword';\nimport { trimmer } from './filters/trimmer';\n\n/**\n * Pipeline function type.\n */\nexport type IndexPipelineFunction = ((token: string, i: number, tokens: string[]) => string)\n\n/**\n * Pipelines maintain an ordered list of functions to be applied to\n * both documents tokens and query tokens.\n *\n * An instance of Index will contain a pipeline with a trimmer, a stop word filter,\n * an English stemmer. Extra functions can be added before or after either of these\n * functions or these default functions can be removed.\n *\n * The output of the functions in the pipeline will be passed to the next function\n * in the pipeline. To exclude a token from entering the index the function\n * should return undefined, the rest of the pipeline will not be called with\n * this token.\n */\nexport class IndexPipeline {\n\n  /**\n   * List of pipeline functions in order queue.\n   */\n  private readonly _queue: IndexPipelineFunction[] = [];\n\n  constructor(...queue: IndexPipelineFunction[]) {\n    if (queue.length == 0) {\n      this._queue = [\n        trimmer,\n        defaultStopWordFilter(),\n        stemmer\n      ];\n    } else {\n      this._queue = queue;\n    }\n  }\n\n  /**\n   * The length of the pipeline.\n   */\n  public get length(): number {\n    return this._queue.length;\n  }\n\n  /**\n   * Runs the current list of functions that registered in the pipeline against the\n   * input tokens.\n   */\n  public run(tokens: string[]): string[] {\n    const out = [];\n    const tokenLength = tokens.length;\n    const pipelineLength = this._queue.length;\n\n    for (let i = 0; i < tokenLength; i++) {\n      let token = tokens[i];\n\n      for (let j = 0; j < pipelineLength; j++) {\n        token = this._queue[j](token, i, tokens);\n        if (!token) {\n          break;\n        }\n      }\n\n      if (!!token) {\n        out.push(token);\n      }\n    }\n\n    return out;\n  };\n}\n","/*\n * Copyright (c) 2022 dataplay.io, all rights reserved.\n */\n\nimport { Configuration, FieldConfiguration } from './configuration';\nimport { DocRef, DocumentStore } from './document-store';\nimport { DocInfo, InvertedIndex } from './inverted-index';\nimport { IndexPipeline, IndexPipelineFunction } from './index-pipeline';\nimport { Tokenizer } from './tokenizer';\n\n/**\n * A search result from the index.\n */\nexport interface SearchResult<T> {\n  /**\n   * The search result score.\n   */\n  score: number;\n\n  /**\n   * The ID of the document.\n   */\n  ref: DocRef<T>;\n\n  /**\n   * The document itself. Only returned if 'expand' is true.\n   */\n  doc?: T;\n}\n\n/**\n * Create a new search index and configure it with the default, or passed pipeline function\n * and default search configuration. Once created, documents may be added and removed, but the base\n * configuration is immutable.\n *\n * By default, the pipeline functions contain a trimmer, a stop word filter, and an english language\n * stemmer. You may provide your own.\n *\n * Example:\n *  let idx = new Index('id');\n *  idx.addField('id');\n *  idx.addField('title');\n *  idx.addField('body');\n *\n *       //this.setRef('id'); // default ref is 'id'\n *\n *       this.pipeline.add(function () {\n *         // some custom pipeline function\n *       });\n *     });\n *\n *    idx.addDoc({\n *      id: 1,\n *      title: 'Oracle released database 12g',\n *      body: 'Yestaday, Oracle has released their latest database, named 12g, more robust. this product will increase Oracle profit.'\n *    });\n *\n *    idx.addDoc({\n *      id: 2,\n *      title: 'Oracle released annual profit report',\n *      body: 'Yestaday, Oracle has released their annual profit report of 2015, total profit is 12.5 Billion.'\n *    });\n *\n *    # simple search\n *    idx.search('oracle database');\n *\n *    # search with query-time boosting\n *    idx.search('oracle database', {fields: {title: {boost: 2}, body: {boost: 1}}});\n */\nexport class Index<T> extends EventTarget {\n\n  public readonly documentStore: DocumentStore<T>;\n\n  private _fields: (keyof T)[] = [];\n\n  private readonly pipeline: IndexPipeline;\n\n  private tokenizer: Tokenizer = new Tokenizer();\n\n  /**\n   * Key frequency inversion index by field.\n   */\n  private fieldIndex: Map<keyof T, InvertedIndex<T>> = new Map<keyof T, InvertedIndex<T>>();\n\n  /**\n   * Inverse document frequency cache.\n   */\n  private _idfCache: Map<string, number> = new Map<string, number>();\n\n  /**\n   * Create a new index. At minimum the field name for the identifier is required,\n   */\n  constructor(ref: keyof T, private readonly config?: FieldConfiguration<T>, ...filters: IndexPipelineFunction[]) {\n    super();\n\n    // Set up the doc store and fields.\n    this.documentStore = new DocumentStore<T>(ref);\n    this.addField(ref);\n\n    // Set up the pipeline.\n    this.pipeline = new IndexPipeline(...filters);\n\n    this.addEventListener('add', () => this._idfCache.clear());\n    this.addEventListener('remove', () => this._idfCache.clear());\n    this.addEventListener('update', () => this._idfCache.clear());\n  }\n\n  /**\n   * The field used to identify the document ID.\n   */\n  public get idField(): keyof T {\n    return this.documentStore.idField;\n  }\n\n  /**\n   * Adds a field to the list of fields that will be searchable within documents in the index.\n   *\n   * Remember that inner index is build based on field, which means each field has one inverted index.\n   *\n   * Fields should be added before any documents are added to the index, fields\n   * that are added after documents are added to the index will only apply to new\n   * documents added to the index.\n   */\n  public addField(fieldName: keyof T): Index<T> {\n    this._fields.push(fieldName);\n    this.fieldIndex.set(fieldName, new InvertedIndex());\n    return this;\n  }\n\n  /**\n   * Add a JSON format document to the index.\n   *\n   * This is the way new documents enter the index, this function will run the\n   * fields from the document through the index's pipeline and then add it to\n   * the index, it will then show up in search results.\n   *\n   * An 'add' event is emitted with the document that has been added and the index\n   * the document has been added to. This event can be silenced by passing false\n   * as the second argument to add.\n   */\n  public addDoc(doc: T, emitEvent: boolean = true): void {\n    if (!doc) {\n      return;\n    }\n    const docRef: DocRef<T> = doc[this.idField];\n\n    this.documentStore.addDoc(doc);\n\n    for (let field of this._fields) {\n      const fieldValue: T[keyof T] = doc[field];\n      const tokens = this.tokenizer.tokenize(fieldValue);\n      const fieldTokens = this.pipeline.run(tokens);\n      this.documentStore.setFieldLength(docRef, field, fieldTokens.length);\n\n      let tokenCount: { [key: string]: number } = {};\n\n      for (let token of fieldTokens) {\n        if (token in tokenCount) {\n          tokenCount[token] += 1;\n        } else {\n          tokenCount[token] = 1;\n        }\n      }\n\n      for (let token in tokenCount) {\n        let termFrequency = tokenCount[token];\n        termFrequency = Math.sqrt(termFrequency);\n        this.fieldIndex.get(field).addToken(token, { ref: docRef, tf: termFrequency });\n      }\n    }\n\n    if (emitEvent) {\n      this.dispatchEvent(new Event('add'));\n    }\n  }\n\n  /**\n   * Removes a document from the index by doc ref.\n   *\n   * To make sure documents no longer show up in search results they can be\n   * removed from the index using this method.\n   *\n   * A 'remove' event is emitted with the document that has been removed and the index\n   * the document has been removed from. This event can be silenced by passing false\n   * as the second argument to remove.\n   *\n   * If user setting DocumentStore not storing the documents, then remove doc by docRef is not allowed.\n   */\n  public removeDocByRef(docRef: DocRef<T>, emitEvent: boolean = true) {\n    this.removeDoc(this.documentStore.getDoc(docRef), emitEvent);\n  }\n\n  /**\n   * Removes a document from the index.\n   * This remove operation could work even the original doc is not store in the DocumentStore.\n   *\n   * To make sure documents no longer show up in search results they can be\n   * removed from the index using this method.\n   *\n   * A 'remove' event is emitted with the document that has been removed and the index\n   * the document has been removed from. This event can be silenced by passing false\n   * as the second argument to remove.\n   */\n  public removeDoc(doc: T, emitEvent: boolean = true) {\n    if (!doc) {\n      return;\n    }\n\n    const docRef = doc[this.idField];\n    if (!this.documentStore.hasDoc(docRef)) {\n      return;\n    }\n    this.documentStore.removeDoc(docRef);\n\n    for (let field of this._fields) {\n      const tokens = this.tokenizer.tokenize(doc[field]);\n      const fieldTokens = this.pipeline.run(tokens);\n      for (let token of fieldTokens) {\n        this.fieldIndex.get(field).removeToken(token, docRef);\n      }\n    }\n\n    if (emitEvent) {\n      this.dispatchEvent(new Event('remove'));\n    }\n  }\n\n  /**\n   * Updates a document in the index.\n   *\n   * When a document contained within the index gets updated, fields changed,\n   * added or removed, to make sure it correctly matched against search queries,\n   * it should be updated in the index.\n   *\n   * This method is just a wrapper around `remove` and `add`\n   *\n   * An 'update' event is emitted with the document that has been updated and the index.\n   * This event can be silenced by passing false as the second argument to update. Only\n   * an update event will be fired, the 'add' and 'remove' events of the underlying calls\n   * are silenced.\n   */\n  public updateDoc(doc: T, emitEvent: boolean = true) {\n    // Get the current document from the store, so we can\n    // delete the stored keys instead of the new ones.\n    const ref = doc[this.idField];\n    this.removeDocByRef(ref, false);\n    this.addDoc(doc, false);\n\n    if (emitEvent) {\n      this.dispatchEvent(new Event('update'));\n    }\n  }\n\n  /**\n   * Get fields of current index instance\n   */\n  public getFields(): (keyof T)[] {\n    return this._fields.slice();\n  }\n\n  /**\n   * Searches the index using the passed query.\n   * Queries should be a string, multiple words are allowed.\n   *\n   * If config is null, will search all fields by default, and lead to OR based query.\n   * If config is specified, will search specified with query time boosting.\n   *\n   * All query tokens are passed through the same pipeline that document tokens\n   * are passed through, so any language processing involved will be run on every\n   * query term.\n   *\n   * Each query term is expanded, so that the term 'he' might be expanded to\n   * 'hello' and 'help' if those terms were already included in the index.\n   *\n   * Matching documents are returned as an array of objects, each object contains\n   * the matching document ref, as set for this index, and the similarity score\n   * for this document against the query.\n   */\n  public search(query: string, userConfig?: FieldConfiguration<T>): SearchResult<T>[] {\n    // Fast exit\n    if (!query) {\n      return [];\n    }\n\n    const config = new Configuration(this.getFields(), userConfig || this.config).get();\n    const queryTokens = this.pipeline.run(this.tokenizer.tokenize(query));\n    const queryResults = new Map<DocRef<T>, number>();\n\n    for (let field in config.fields) {\n      const fieldSearchResults = this.fieldSearch(queryTokens, field, config);\n      const fieldBoost = config.fields[field].boost;\n      for (let docRef of fieldSearchResults.keys()) {\n        fieldSearchResults.set(docRef, fieldSearchResults.get(docRef) * fieldBoost);\n      }\n\n      for (let docRef of fieldSearchResults.keys()) {\n        if (queryResults.has(docRef)) {\n          queryResults.set(docRef, queryResults.get(docRef) + fieldSearchResults.get(docRef));\n        } else {\n          queryResults.set(docRef, fieldSearchResults.get(docRef));\n        }\n      }\n    }\n\n    let results = [];\n    for (let docRef of queryResults.keys()) {\n      results.push({ ref: docRef, score: queryResults.get(docRef) });\n    }\n\n    results.sort(function(a, b) {\n      return b.score - a.score;\n    });\n    return results;\n  }\n\n  /**\n   * Search for the query tokens in the specified document field\n   * search queryTokens in specified field.\n   */\n  public fieldSearch(queryTokens: string[], fieldName: keyof T, config: FieldConfiguration<T>): Map<DocRef<T>, number> {\n    const booleanType = config.fields[fieldName].bool;\n    const expand = config.fields[fieldName].expand;\n    const boost = config.fields[fieldName].boost;\n    let scores: Map<DocRef<T>, number> = null;\n    let docTokens = new Map<DocRef<T>, string[]>();\n\n    // Do nothing if the boost is 0\n    if (boost === 0) {\n      return new Map<DocRef<T>, number>();\n    }\n\n    for (let token of queryTokens) {\n      let tokens = [token];\n      if (expand == true) {\n        tokens = this.fieldIndex.get(fieldName).expandToken(token);\n      }\n\n      // Consider every query token in turn. If expanded, each query token\n      // corresponds to a set of tokens, which is all tokens in the\n      // index matching the pattern queryToken* .\n      // For the set of tokens corresponding to a query token, find and score\n      // all matching documents. Store those scores in queryTokenScores,\n      // keyed by docRef.\n      // Then, depending on the value of booleanType, combine the scores\n      // for this query token with previous scores.  If booleanType is OR,\n      // then merge the scores by summing into the accumulated total, adding\n      // new document scores are required (effectively a union operator).\n      // If booleanType is AND, accumulate scores only if the document\n      // has previously been scored by another query token (an intersection\n      // operation0.\n      // Furthermore, since when booleanType is AND, additional\n      // query tokens can't add new documents to the result set, use the\n      // current document set to limit the processing of each new query\n      // token for efficiency (i.e., incremental intersection).\n\n      const queryTokenScores = new Map<DocRef<T>, number>();\n      for (let key of tokens) {\n        let docs = this.fieldIndex.get(fieldName).getDocs(key);\n        let idf = this.idf(key, fieldName);\n\n        if (scores && booleanType == 'AND') {\n          // special case, we can rule out documents that have been\n          // already been filtered out because they weren't scored\n          // by previous query token passes.\n          let filteredDocs: Map<DocRef<T>, DocInfo<T>> = new Map<DocRef<T>, DocInfo<T>>();\n          for (let docRef of scores.keys()) {\n            if (docs.has(docRef)) {\n              filteredDocs.set(docRef, docs.get(docRef));\n            }\n          }\n          docs = filteredDocs;\n        }\n\n        // only record appeared token for retrieved documents for the\n        // original token, not for expanded token.\n        // because for doing coordNorm for a retrieved document, coordNorm only care how many\n        // query token appear in that document.\n        // so expanded token should not be added into docTokens, if added, this will pollute the\n        // coordNorm\n        if (key == token) {\n          this.fieldSearchStats(docTokens, key, docs);\n        }\n\n        for (let docRef of docs.keys()) {\n          const tf = this.fieldIndex.get(fieldName).getTermFrequency(key, docRef);\n          const fieldLength = this.documentStore.getFieldLength(docRef, fieldName);\n          let fieldLengthNorm = 1;\n          if (fieldLength != 0) {\n            fieldLengthNorm = 1 / Math.sqrt(fieldLength);\n          }\n\n          let penalty = 1;\n          if (key != token) {\n            // currently I'm not sure if this penality is enough,\n            // need to do verification\n            penalty = (1 - (key.length - token.length) / key.length) * 0.15;\n          }\n\n          const score = tf * idf * fieldLengthNorm * penalty;\n          if (queryTokenScores.has(docRef)) {\n            queryTokenScores.set(docRef, queryTokenScores.get(docRef) + score);\n          } else {\n            queryTokenScores.set(docRef, score);\n          }\n        }\n      }\n\n      scores = this.mergeScores(scores, queryTokenScores, booleanType);\n    }\n\n    return this.coordNorm(scores, docTokens, queryTokens.length);\n  }\n\n  /**\n   * Get the field access index for a particular field.\n   */\n  public getFieldIndex(field: keyof T): InvertedIndex<T> {\n    return this.fieldIndex.get(field);\n  }\n\n  /**\n   * Calculates the inverse document frequency for a token within the index of a field.\n   */\n  public idf(term: string, field: keyof T): number {\n    let cacheKey = '@' + field + '/' + term;\n    if (this._idfCache.has(cacheKey)) {\n      return this._idfCache.get(cacheKey);\n    }\n\n    const df = this.fieldIndex.get(field).getDocFreq(term);\n    let idf = 1 + Math.log(this.documentStore.length / (df + 1));\n    this._idfCache.set(cacheKey, idf);\n    return idf;\n  }\n\n  /**\n   * Clear the index of all documents and caches. Fields and refs are retained.\n   */\n  private clear(): void {\n    this.fieldIndex.clear();\n    this._idfCache.clear();\n    this.documentStore.clear();\n  }\n\n  /**\n   * Merge the scores from one set of tokens into an accumulated score table.\n   * Exact operation depends on the op parameter. If op is 'AND', then only the\n   * intersection of the two score lists is retained. Otherwise, the union of\n   * the two score lists is returned. For internal use only.\n   */\n  private mergeScores(accumScores: Map<DocRef<T>, number>, scores: Map<DocRef<T>, number>, op: 'AND' | 'OR'): Map<DocRef<T>, number> {\n    if (!accumScores) {\n      return scores;\n    }\n    if (op == 'AND') {\n      let intersection = new Map<DocRef<T>, number>();\n      for (let docRef of scores.keys()) {\n        if (accumScores.has(docRef)) {\n          intersection.set(docRef, accumScores.get(docRef) + scores.get(docRef));\n        }\n      }\n      return intersection;\n    } else {\n      for (let docRef of scores.keys()) {\n        if (accumScores.has(docRef)) {\n          accumScores.set(docRef, accumScores.get(docRef) + scores.get(docRef));\n        } else {\n          accumScores.set(docRef, scores.get(docRef));\n        }\n      }\n      return accumScores;\n    }\n  }\n\n  /**\n   * Record the occuring query token of retrieved doc specified by doc field.\n   * Only for inner user.\n   */\n  private fieldSearchStats(docTokens: Map<DocRef<T>, string[]>, token: string, docs: Map<DocRef<T>, DocInfo<T>>) {\n    for (let doc of docs.keys()) {\n      if (docTokens.has(doc)) {\n        docTokens.get(doc).push(token);\n      } else {\n        docTokens.set(doc, [token]);\n      }\n    }\n  }\n\n  /**\n   * coord norm the score of a doc.\n   * if a doc contain more query tokens, then the score will larger than the doc\n   * contains less query tokens.\n   */\n  private coordNorm(scores: Map<DocRef<T>, number>, docTokens: Map<DocRef<T>, string[]>, n: number) {\n    for (let doc of scores.keys()) {\n      if (!docTokens.has(doc)) {\n        continue;\n      }\n      const tokens = docTokens.get(doc).length;\n      scores.set(doc, scores.get(doc) * tokens / n);\n    }\n\n    return scores;\n  }\n}\n","/*\n * Copyright (c) 2022 dataplay.io, all rights reserved.\n */\n\nimport { DocRef } from './document-store';\n\n/**\n * Token Info format, using the document's ref and the token frequency of this token in the document.\n */\nexport interface DocInfo<T> {\n  ref: DocRef<T>,\n\n  tf: number\n}\n\n/**\n * Data node inside the index.\n */\ntype Node<T> = Map<string, Node<T>> & {\n  docs: Map<DocRef<T>, DocInfo<T>>,\n  df: number\n};\n\n/**\n * Create a new node.\n */\nfunction newNode<T>(): Node<T> {\n  const node = <Node<T>> (new Map<string, Node<T>>());\n  node.docs = new Map<DocRef<T>, DocInfo<T>>();\n  node.df = 0;\n  return node;\n}\n\n/**\n * InvertedIndex is used for efficiently storing and lookup of documents that contain a given token.\n */\nexport class InvertedIndex<T> {\n\n  /**\n   * Root reference for the index on this token.\n   */\n  private root: Node<T> = newNode<T>();\n\n  /**\n   * Adds a {token: tokenInfo} pair to the inverted index.\n   * If the token already exist, then update the tokenInfo.\n   *\n   * tokenInfo format: { ref: 1, tf: 2}\n   * tokenInfor should contains the document's ref and the tf(token frequency) of that token in\n   * the document.\n   *\n   * By default this function starts at the root of the current inverted index, however\n   * it can start at any node of the inverted index if required.\n   */\n  public addToken(token: string, tokenInfo: DocInfo<T>, root: Node<T> = this.root) {\n    let idx = 0;\n    while (idx <= token.length - 1) {\n      let key = token[idx];\n      if (!root.has(key)) {\n        root.set(key, newNode());\n      }\n      idx += 1;\n      root = root.get(key);\n    }\n\n    if (!root.docs.has(tokenInfo.ref)) {\n      // If it doesn't exist, add a new one.\n      root.docs.set(tokenInfo.ref, tokenInfo);\n      root.df += 1;\n    } else {\n      // if this doc already exist, then update tokenInfo\n      root.docs.get(tokenInfo.ref).tf = tokenInfo.tf;\n    }\n  };\n\n  /**\n   * Checks whether a token is in this InvertedIndex.\n   */\n  public hasToken(token: string): boolean {\n    if (!token) {\n      return false;\n    }\n\n    let node = this.root;\n    for (let i = 0; i < token.length; i++) {\n      const key = token.charAt(i);\n      if (!node.has(key)) {\n        return false;\n      }\n      node = node.get(key);\n    }\n\n    return true;\n  };\n\n  /**\n   * Retrieve a node from the inverted index for a given token.\n   * If token not found in this InvertedIndex, return null.\n   */\n  public getNode(token: string): Node<T> | undefined {\n    if (!token) {\n      return null;\n    }\n\n    let node = this.root;\n    for (let i = 0; i < token.length; i++) {\n      const key = token.charAt(i);\n      if (!node.has(key)) {\n        return undefined;\n      }\n      node = node.get(key);\n    }\n    return node;\n  }\n\n  /**\n   * Retrieve the documents of a given token.\n   * If token not found, return {}.\n   */\n  public getDocs(token: string): Map<DocRef<T>, DocInfo<T>> {\n    const node = this.getNode(token);\n    if (node == null) {\n      return new Map<DocRef<T>, DocInfo<T>>();\n    }\n    return node.docs;\n  }\n\n  /**\n   * Retrieve term frequency of given token in given docRef.\n   * If token or docRef not found, return 0.\n   */\n  public getTermFrequency(token: string, docRef: DocRef<T>): number {\n    const doc = this.getDocs(token).get(docRef);\n    if (doc === undefined) {\n      return 0;\n    }\n    return doc.tf;\n  }\n\n  /**\n   * Retrieve the document frequency of given token.\n   * If token not found, return 0.\n   */\n  public getDocFreq(token: string): number {\n    const node = this.getNode(token);\n    if (node == undefined) {\n      return 0;\n    }\n    return node.df;\n  }\n\n  /**\n   * Remove the document identified by document's ref from the token in the inverted index.\n   */\n  public removeToken(token: string, docRef: DocRef<T>) {\n    let node = this.getNode(token);\n    if (node == undefined) {\n      return;\n    }\n\n    if (node.docs.has(docRef)) {\n      node.docs.delete(docRef);\n      node.df -= 1;\n    }\n  }\n\n  /**\n   * Find all the possible suffixes of given token using tokens currently\n   * in the inverted index. If token not found, return empty Array.\n   */\n  public expandToken(token: string, root?: Node<T>): string[] {\n    let memo: string[] = [];\n    if (!root) {\n      root = this.getNode(token);\n      if (root == undefined) {\n        return memo;\n      }\n    }\n\n    if (root.df > 0) {\n      memo.push(token);\n    }\n\n    for (let key of root.keys()) {\n      memo.push(...this.expandToken(token + key, root.get(key)));\n    }\n\n    return memo;\n  }\n}\n","/*\n * Copyright (c) 2022 dataplay.io, all rights reserved.\n */\n\n/**\n * Default string seperator.\n */\n\nconst defaultSeperator: RegExp = /[\\s\\-]+/;\n\n/**\n * A class for splitting a string into tokens. Currently English is supported as default.\n * Uses `public seperator` to split strings, you could change\n * the value of this property to set how you want strings are split into tokens.\n * IMPORTANT: use public seperator carefully, if you are not familiar with\n * text process, then you'd better not change it.\n */\nexport class Tokenizer {\n\n  /**\n   * The separator used to split a string into tokens. Override this property to change the behaviour of\n   * `tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n   */\n  constructor(private readonly separator: RegExp = defaultSeperator) {\n  }\n\n  /**\n   * Tokenize a string into its components.\n   */\n  public tokenize(...str: any[]): string[] {\n    if (!str) {\n      return [];\n    }\n\n    return str\n      .map((token) => this.toString(token))\n      // Filter out empty values\n      .filter((token) => !!token)\n      // Stringify and lowercase the value\n      .map((token) => token.trim().toLowerCase())\n      // Concat all results.\n      .reduce((coll, token) => [\n        ...coll,\n        ...token.split(this.separator)\n      ], []);\n  }\n\n  /**\n   * Convert an object to string.\n   *\n   * In the case of `null` and `undefined` the function returns\n   * an empty string, in all other cases the result of calling\n   * `toString` on the passed object is returned.\n   */\n  private toString(obj: any): string {\n    if (obj === void 0 || obj === null) {\n      return '';\n    }\n\n    return obj.toString();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { ProfileContact } from '../model/profile-contact';\n\nimport { faGithub, faLinkedin, faTwitter, faWordpress } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\n\n@Pipe({\n  name: 'contactIconName'\n})\nexport class ContactIconNamePipe implements PipeTransform {\n\n  /**\n   * Transform a contact item type into the appropriate font awesome icon.\n   */\n  public transform(value: ProfileContact): any {\n    switch (value.type) {\n      case 'email':\n        return faEnvelope;\n      case 'twitter':\n        return faTwitter;\n      case 'wordpress':\n        return faWordpress;\n      case 'linkedin':\n        return faLinkedin;\n      case 'github':\n        return faGithub;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { ProfileContact } from '../model/profile-contact';\n\n@Pipe({\n  name: 'contactLink'\n})\nexport class ContactLinkPipe implements PipeTransform {\n\n  /**\n   * Transform a contact item into the appropriate HREF link.\n   */\n  public transform(value: ProfileContact): any {\n    switch (value.type) {\n      case 'email':\n        return `mailto:${value.value}`;\n      default:\n        return value.value;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractEventRendererComponent } from '../abstract-event-renderer/abstract-event-renderer.component';\nimport { CareerEvent } from '../model/career-event';\nimport { EventRenderer } from '../model/event-renderer';\n\n@Component({\n  selector: 'cv-presentation-event',\n  templateUrl: './presentation-event.component.html',\n  styleUrls: ['./presentation-event.component.scss']\n})\nexport class PresentationEventComponent extends AbstractEventRendererComponent {\n\n}\n","<cv-event-title [title]=\"'Presentation: ' + event.title\" [date]=\"endDate\"></cv-event-title>\n<p>{{event.event}} - {{event.location.city}}, {{event.location.country}}</p>\n<cv-event-tags [tags]=\"event.tags\"></cv-event-tags>\n","import { Component } from '@angular/core';\nimport { AbstractEventRendererComponent } from '../abstract-event-renderer/abstract-event-renderer.component';\n\n@Component({\n  selector: 'cv-project-event',\n  templateUrl: './project-event.component.html',\n  styleUrls: ['./project-event.component.scss']\n})\nexport class ProjectEventComponent extends AbstractEventRendererComponent {\n\n}\n","<cv-event-title [title]=\"'Project: ' + event.title\" [date]=\"endDate\"></cv-event-title>\n<p>{{event.description}}</p>\n<cv-event-tags [tags]=\"event.tags\"></cv-event-tags>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { first, map, shareReplay } from 'rxjs/operators';\nimport { CareerEvent } from '../model/career-event';\nimport { Profile } from '../model/profile';\n\n/**\n * The data service.\n */\n@Injectable({ providedIn: 'root' })\nexport class DataService {\n\n  public profile$: Observable<Profile>;\n\n  public events$: Observable<CareerEvent[]>;\n\n  constructor(http: HttpClient) {\n\n    const profileUrl = `data/profile.json`;\n    const eventsUrl = `data/events.json`;\n\n    this.profile$ = http.get<Profile>(profileUrl).pipe(first(), shareReplay(1));\n    this.events$ = http.get<{ results: CareerEvent[] }>(eventsUrl).pipe(\n      map((result) => result.results.sort((a, b) => {\n        const aDate = this.chooseDate(a);\n        const bDate = this.chooseDate(b);\n        if (aDate === bDate) {\n          return this.typeRank(b.type)- this.typeRank(a.type);\n        }\n        return aDate > bDate ? -1 : 1;\n      })),\n      first(),\n      shareReplay(1)\n    );\n  }\n\n  private typeRank(type: string): number {\n    switch (type) {\n      case 'presentation':\n        return -1;\n      case 'project':\n        return 1;\n      case 'job_change':\n        return 2;\n      default:\n        console.log(type);\n        return 0;\n    }\n  }\n\n  private chooseDate(e: CareerEvent): number {\n    switch (e.type) {\n      case 'education':\n      case 'presentation':\n        return this.buildDate(e.date, 'begin').getTime();\n      case 'job_change':\n      case 'project':\n        return this.buildDate(e.date, 'end').getTime();\n      default:\n        return this.buildDate(e.date, 'begin').getTime();\n    }\n  }\n\n  private buildDate(date: string | { begin: string, end: string }, key: 'begin' | 'end'): Date {\n    let dateString: string;\n    if (typeof date === 'string') {\n      dateString = date;\n    } else {\n      dateString = date[key];\n    }\n    if (dateString === 'current') {\n      return new Date();\n    }\n    return new Date(dateString);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Observable, of, Subject } from 'rxjs';\nimport { distinctUntilChanged, map, pluck, reduce, shareReplay, startWith, switchMap, take, withLatestFrom } from 'rxjs/operators';\nimport { CareerEvent } from '../model/career-event';\nimport { DataService } from './data.service';\nimport { Index, SearchResult } from '../lunr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TagSearchService {\n\n  public validTags$: Observable<string[]>;\n\n  public filteredTags$: Observable<{ tag: string }[]>;\n\n  public tagFilter$: Subject<string> = new Subject<string>();\n\n  public selectedTags$: Observable<string[]>;\n\n  private index: Index<{ tag: string }>;\n\n  constructor(data: DataService,\n              activatedRoute: ActivatedRoute,\n              private router: Router) {\n    this.index = new Index('tag');\n    this.index.addField('tag');\n\n    this.selectedTags$ = activatedRoute.queryParams\n      .pipe(\n        distinctUntilChanged(),\n        pluck('tag'),\n        map((t) => t ? t.split(',') : [])\n      );\n\n    this.validTags$ = data.events$\n      .pipe(\n        switchMap((evts: CareerEvent[]) => of(...evts)),\n        map((evt: CareerEvent) => evt.tags),\n        reduce((acc: Set<string>, value: string[]) => {\n          value.forEach((v) => acc.add(v));\n          return acc;\n        }, new Set<string>()),\n        map((tagSet) => Array.from(tagSet)),\n        shareReplay(1)\n      );\n\n    this.validTags$.subscribe((tags) => tags.forEach((tag) => this.index.addDoc({tag})));\n\n    this.filteredTags$ = this.tagFilter$\n      .pipe(\n        switchMap((str) => {\n          if (!str || str.length === 0) {\n            return of([]);\n          }\n\n          return of(this.index.search(str, {fields: {tag: {expand: true}}}))\n            .pipe(\n              map((searchResults: SearchResult<{ tag: string }>[]) => {\n                return searchResults.map((result) => this.index.documentStore.getDoc(result.ref));\n              })\n            );\n        }),\n        withLatestFrom(this.selectedTags$),\n        map(([filtered, selected]) => filtered.filter((tag) => selected.indexOf(tag.tag) === -1)),\n        map((tags) => tags.length === 0 ? null : tags),\n        // eslint-disable-next-line import/no-deprecated\n        startWith(null),\n        shareReplay(1)\n      )\n    ;\n  }\n\n  /**\n   * Add a tag to the selection criteria.\n   */\n  public addTag(newTag: string): void {\n    this.selectedTags$\n      .pipe(take(1))\n      .subscribe(\n        {\n          next: (tag) => {\n            this.navigateTo([...tag, newTag]);\n          }\n        });\n  }\n\n  /**\n   * Clear all the tags.\n   */\n  public clear(): void {\n    this.navigateTo([]);\n  }\n\n  /**\n   * Remove the last tag.\n   */\n  public removeLast(): void {\n    this.selectedTags$\n      .pipe(\n        take(1)\n      )\n      .subscribe({\n        next: (tag) => {\n          if (tag.length > 0) {\n            tag.splice(-1);\n            this.navigateTo(tag);\n          }\n        }\n      });\n  }\n\n  /**\n   * Remove a tag from the selection.\n   */\n  public removeTag(oldTag: string): void {\n    this.selectedTags$\n      .pipe(\n        take(1),\n        map((t) => {\n          const idx = t.indexOf(oldTag);\n          if (idx > -1) {\n            t.splice(idx, 1);\n          }\n          return t;\n        })\n      ).subscribe(\n      {\n        next: (tag) => this.navigateTo(tag)\n      });\n  }\n\n  /**\n   * Central router. Might as well.\n   */\n  private navigateTo(tags: string[]): void {\n    const tag = tags.length > 0 ? tags.join(',') : null;\n    this.router.navigate(['/'], {queryParams: {tag}});\n  }\n}\n","import { Component } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { concatMap, map, reduce, shareReplay } from 'rxjs/operators';\nimport { CareerEvent } from '../model/career-event';\nimport { DataService } from '../services/data.service';\nimport { TagSearchService } from '../services/tag-search.service';\n\ninterface SkillCollection {\n  [key: string]: { startDate: Date, endDate: Date, duration?: number, lastUsed?: number };\n}\n\ninterface SkillEntry {\n  name: string;\n\n  endDate: Date;\n\n  startDate: Date;\n\n  duration?: number;\n\n  lastUsed?: number;\n}\n\nconst yearInMillis = 365 * 24 * 60 * 60 * 1000;\nconst monthInMillis = yearInMillis / 12;\n\n@Component({\n  selector: 'cv-skill-box',\n  templateUrl: './skill-box.component.html',\n  styleUrls: ['./skill-box.component.scss']\n})\nexport class SkillBoxComponent {\n\n  // A sorted list of skills.\n  public skills$: Observable<SkillEntry[]>;\n\n  public filteredSkills$: Observable<SkillEntry[]>;\n\n  public startDate$: Observable<number>;\n\n  public endDate$: Observable<number>;\n\n  public dateRange$: Observable<number>;\n\n  constructor(dataService: DataService, tags: TagSearchService) {\n    this.skills$ = dataService.events$\n      .pipe(\n        concatMap((events) => of(...events)),\n        concatMap((event: CareerEvent) => of(...event.tags.map((name) => ({\n          name,\n          startDate: typeof event.date === 'string' ? event.date : event.date.begin,\n          endDate: typeof event.date === 'string' ? event.date : event.date.end\n        })))),\n        map((skill): SkillEntry => {\n          const startDate = new Date(skill.startDate);\n          const endDate = skill.endDate === 'current' ? new Date() : new Date(skill.endDate);\n          return { name: skill.name, startDate, endDate };\n        }),\n        reduce((acc: SkillCollection, val: SkillEntry) => {\n          if (!acc.hasOwnProperty(val.name)) {\n            acc[val.name] = { startDate: val.startDate, endDate: val.endDate };\n          } else {\n            const current = acc[val.name];\n            current.startDate = current.startDate > val.startDate ? val.startDate : current.startDate;\n            current.endDate = current.endDate < val.endDate ? val.endDate : current.endDate;\n          }\n\n          acc[val.name].duration = acc[val.name].endDate.getTime() - acc[val.name].startDate.getTime();\n          acc[val.name].lastUsed = new Date().getTime() - acc[val.name].endDate.getTime();\n\n          return acc;\n        }, <SkillCollection>{}),\n        map((coll) => {\n          const skills = Object.keys(coll).map((key): SkillEntry => ({\n            name: key,\n            startDate: coll[key].startDate,\n            endDate: coll[key].endDate,\n            duration: coll[key].duration,\n            lastUsed: coll[key].lastUsed\n          }));\n\n          return skills.sort((a, b) => {\n            if (a.endDate > b.endDate) {\n              return -1;\n            }\n            if (a.endDate < b.endDate) {\n              return 0;\n            }\n            return a.duration === b.duration ? 0 : a.duration < b.duration ? 1 : -1;\n          });\n        }),\n        shareReplay(1)\n      );\n\n    this.filteredSkills$ = combineLatest([this.skills$, tags.selectedTags$, dataService.profile$])\n      .pipe(\n        map(([skills, selectedTags, profile]) => {\n          let filteringSkills = profile.featuredSkills;\n          if (selectedTags.indexOf('Everything') === -1) {\n            filteringSkills = selectedTags;\n          }\n\n          if (filteringSkills.length === 0) {\n            return [];\n          }\n\n          return skills.filter((skill) => filteringSkills.indexOf(skill.name) > -1);\n        }),\n        shareReplay(1)\n      );\n\n    this.startDate$ = this.filteredSkills$\n      .pipe(\n        map((skills) => skills\n          .map((skill) => skill.startDate)\n          .sort((a, b) => a > b ? 1 : a < b ? -1 : 0)[0]\n        ),\n        map((date) => date ? date.getTime() : 0),\n        shareReplay(1)\n      );\n\n    this.endDate$ = this.skills$\n      .pipe(\n        map((skills) => skills\n          .map((skill) => skill.endDate)\n          .sort((a, b) => a > b ? -1 : a < b ? 1 : 0)[0]\n        ),\n        map((date) => date ? date.getTime() : 0),\n        shareReplay(1)\n      );\n\n    this.dateRange$ = combineLatest([this.startDate$, this.endDate$])\n      .pipe(\n        map(([start, end]) => end - start)\n      );\n  }\n\n  /**\n   * A millisecond duration, expressed as a string in months/years.\n   */\n  public durationLabel(skill: SkillEntry): string {\n    const year = Math.floor(skill.duration / yearInMillis);\n    const month = Math.floor((skill.duration % yearInMillis) / monthInMillis);\n    const yearLabel = year === 0 ? '' : year === 1 ? '1 year' : `${year} years`;\n    const monthLabel = month === 0 ? '' : month === 1 ? '1 month' : `${month} months`;\n\n    const parts = [];\n    if (yearLabel) {\n      parts.push(yearLabel);\n    }\n    if (monthLabel) {\n      parts.push(monthLabel);\n    }\n    return parts.join(', ');\n  }\n}\n","<div *ngFor=\"let skill of filteredSkills$ | async\" class=\"skill\">\n  <div class=\"skill-label\">{{skill.name}}</div>\n  <div class=\"skill-bar\">\n    <div class=\"skill-bar-duration\"\n         title=\"{{skill.startDate | date : 'MMM `yy'}} - {{skill.endDate | date : 'MMM `yy'}}: {{durationLabel(skill)}}\"\n         *ngIf=\"dateRange$ | async as range\"\n         [ngStyle]=\"{ width: skill.duration / range * 100 + '%', 'margin-right': skill.lastUsed / range * 100 + '%'}\">\n    </div>\n  </div>\n</div>\n<div class=\"skill\">\n  <div class=\"skill-label\">&nbsp;</div>\n  <div class=\"skill-footer\">\n    <div class=\"skill-date\">{{startDate$ | async | date : 'MMM `yy'}}</div>\n    <div class=\"skill-date\">{{endDate$ | async | date : 'MMM `yy'}}</div>\n  </div>\n</div>\n","import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { TagSearchService } from '../services/tag-search.service';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'cv-tag-search',\n  templateUrl: './tag-search.component.html',\n  styleUrls: ['./tag-search.component.scss']\n})\nexport class TagSearchComponent {\n\n  public faTimes = faTimes;\n\n  /**\n   * Placeholder text.\n   */\n  @Input()\n  public placeholder: string;\n\n  /**\n   * Search input.\n   */\n  @ViewChild('searchInput', { static: true })\n  public searchInput: ElementRef;\n\n  /**\n   * THe public placeholder.\n   */\n  public placeholder$: Observable<string>;\n\n  /**\n   * All the things.\n   */\n  constructor(public service: TagSearchService) {\n    this.placeholder$ = service.selectedTags$\n      .pipe(\n        map((tags) => tags.length > 0 ? '' : this.placeholder)\n      );\n  }\n\n  /**\n   * The tag string.\n   */\n  public removeTag(tag: string) {\n    this.service.removeTag(tag);\n  }\n\n  /**\n   * Add a tag.\n   */\n  public addTag(tag: string) {\n    this.service.addTag(tag);\n    this.service.tagFilter$.next('');\n    this.searchInput.nativeElement.value = '';\n  }\n\n  /**\n   * Remove last.\n   */\n  public removeLast(event) {\n    if (event.key === 'Backspace') {\n      if (event.target.value === '') {\n        this.service.removeLast();\n      }\n    }\n  }\n\n  /**\n   * Carriage return handler.\n   */\n  public handleEnter() {\n    this.service.filteredTags$\n      .pipe(take(1))\n      .subscribe((tags) => {\n        if (tags && tags.length > 0) {\n          this.addTag(tags[0].tag);\n        }\n      });\n  }\n}\n","<div class=\"tag\" *ngFor=\"let tag of service.selectedTags$ | async\">\n  {{tag}}\n  <fa-icon [icon]=\"faTimes\" (click)=\"removeTag(tag)\"></fa-icon>\n</div>\n<input type=\"text\"\n       #searchInput\n       autofocus\n       (input)=\"service.tagFilter$.next($event.target.value)\"\n       (keydown.enter)=\"handleEnter()\"\n       (keydown)=\"removeLast($event)\"\n       [placeholder]=\"placeholder$ | async\">\n<ul class=\"tag-search-options\"\n    *ngIf=\"service.filteredTags$ | async as tags\">\n  <li *ngFor=\"let tag of tags\" (click)=\"addTag(tag.tag)\">{{tag.tag}}</li>\n</ul>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"names":[],"sourceRoot":"webpack:///"}